
SparkSession: Это объект, который позволяет управлять сеансом Spark. Он используется для чтения данных и выполнения аналитики в распределенной системе.
Чтение потоковых данных: Данные о времени (time) и количестве онлайн-пользователей (online) считываются из файла в формате CSV. Spark может обрабатывать данные в реальном времени с помощью потоковой обработки.
VectorAssembler: Это инструмент, который преобразует входные данные (в данном случае, только один столбец online) в формат признаков, понятный моделям машинного обучения.
LinearRegression: Это класс, который реализует модель линейной регрессии. Линейная регрессия — это статистический метод для моделирования зависимости между одной или несколькими независимыми переменными и одной зависимой переменной. В этом коде независимой переменной является online, а зависимой переменной также online, чтобы предсказать будущее значение активности.
Обучение модели: Модель линейной регрессии обучается на входных данных (training_data). features — это признак (количество онлайн-пользователей), а label — это целевая переменная, которую мы пытаемся предсказать (также количество онлайн-пользователей).
Предсказание: После обучения модели, данные прогоняются через модель (model.transform(data_window)), чтобы получить предсказания (prediction) о будущей активности.
Сравнение с порогом: После получения прогноза, он сравнивается с пороговым значением threshold, чтобы определить, ожидается ли низкая активность или высокая активность.
Цикличность: Код выполняется в цикле, чтобы непрерывно читать новые данные, обучать модель и выводить предсказания каждые 10 секунд.
Таким образом, модель непрерывно обучается на новых данных, что позволяет ей делать точные прогнозы в будущем. Линейная регрессия предполагает, что зависимая переменная (online) линейно зависит от независимой переменной (времени). Это упрощенная модель, которая может служить основой для более сложных моделей в будущем.






